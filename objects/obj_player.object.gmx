<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables
grav = 0.2;
hsp = 0;
vsp = 0;
move_speed = 4;
jump_speed_normal = 7;
jump_speed_powerup = 10;

// initialize jump_speed as normal speed
jump_speed = jump_speed_normal;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// reset jump_speed after alarm

jump_speed = jump_speed_normal;
sprite_index = spr_player;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle movement of the Player Character

// get and process the player's input
key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump = keyboard_check_pressed(vk_space);
key_jump_held = keyboard_check(vk_space);
move = key_left + key_right;
hsp = move * move_speed;

// falling handling, can just add since this is set to
// zero for floor contact anyway
if (vsp &lt; 10){
  vsp += grav;
}

// if the player is on the ground, allow them to jump
if (place_meeting(x, y+1, obj_wall)){
    vsp = key_jump * -jump_speed;
}

/*
  Simple "one line" handler for variable jump height with
  way too much commenting because tutorial.

  Here max prevents the player from resetting if they
  are simply falling down, remember that negative speed
  means that the player is moving upwards on screen.

  Also of note, this is frame precise control of height,
  you can use (jump_speed / X) for less precision.

  If you have springs, make sure and tweak this line to
  not allow the player to stop themselves after springing.
*/
if ((vsp &lt; 0) &amp;&amp; (!key_jump_held)){
  vsp = max(vsp, 0);
}

// Horizontal Collision with pixel precision
if (place_meeting(x + hsp, y, obj_wall)){
    while (!place_meeting(x + sign(hsp), y, obj_wall)){
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;

// Vertical Collision with pixel precision
if (place_meeting(x, y + vsp, obj_wall)){
    while (!place_meeting(x, y + sign(vsp), obj_wall)){
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
